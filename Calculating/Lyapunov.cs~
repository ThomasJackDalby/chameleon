using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Chameleon.Fractals
{
    public class Lyapunov : IFractal
    {
        public int IterationLimit { get; set; }
		public int[] Series { get; set; }

		public Lyapunov(string[] args)
		{ 
			Console.WriteLine("Created a Lyapunov fractal");
		    	string inputString = args[0];
			IterationLimit = int.Parse(args[1]);

			Series = new int[inputString.Length];
			for(int i=0;i<inputString.Length;i++)
			{
				Series[i] = int.Parse(inputString[i]);
			}
		}

        public double Process(double x, double y)
        {
            double xN = 0.5;
            double rn = 1;
            double lambda = 0;
		int N = IterationLimit;
		double[] zN = { x, y };

            for(int n=0;n<N;n++)
            {
                if (Series[n % Series.Length] == 0) rn = zN[0];
                else rn = zN[1];

                xN = rn * xN * (1 - xN);
                lambda += Math.Log(Math.Abs(rn * (1 - 2*xN)));
            }

            return lambda / N;
        }
    }
}
